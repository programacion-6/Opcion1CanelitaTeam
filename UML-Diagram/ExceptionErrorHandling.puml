@startuml

package "Exception Handling" {
    enum Severity {
        {static} + LOW
        {static} + MEDIUM
        {static} + HIGH
        {static} + CRITICAL
    }

    abstract class GlobalException {
        + Message : String
        + Severity : Severity
        + GlobalException(String message, Severity severity)
    }

    class BookNotFoundException {
        + BookNotFoundException(String message)
    }

    class PatronNotFoundException {
        + PatronNotFoundException(String message)
    }

    Exception <|-- GlobalException
    GlobalException <|-- BookNotFoundException
    GlobalException <|-- PatronNotFoundException
    GlobalException --> Severity
}

package "Error Handling" {
    class ILogService {
        + LogError(Severity severity, string message) : void
    }

    class LogService implements ILogService {
        + LogError(Severity severity, string message) : void
        + GenerateLogFile() : void
    }

    ILogService --> Severity
}

@enduml
